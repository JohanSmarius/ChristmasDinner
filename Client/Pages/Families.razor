@page "/families"

@inject HttpClient Http

<PageTitle>Families</PageTitle>

<h1>Families</h1>

@if (families == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Town</th>
                <th>Number of Persons</th>
                <th>Children</th>
                <th>Number of Seats</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var family in families)
            {
                <tr>
                    <td>@family.Name</td>
                    <td>@family.Town</td>
                    <td>@family.NumberOfPersons</td>
                    <td>
                        @foreach (var child in family.Children)
                        {
                            <p>@child.Name (@child.Age)</p>
                        }
                    </td>
                    <td>@family.NumberOfSeats</td>
                </tr>
            }
        </tbody>
    </table>
}

<h2>Add a new family</h2>

<EditForm Model="@newFamily" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="newFamily.Name" />
    </div>
    <div class="mb-3">
        <label for="town" class="form-label">Town</label>
        <InputText id="town" class="form-control" @bind-Value="newFamily.Town" />
    </div>
    <div class="mb-3">
        <label for="numberOfPersons" class="form-label">Number of Persons</label>
        <InputNumber id="numberOfPersons" class="form-control" @bind-Value="newFamily.NumberOfPersons" />
    </div>
    <div class="mb-3">
        <label for="numberOfSeats" class="form-label">Number of Seats</label>
        <InputNumber id="numberOfSeats" class="form-control" @bind-Value="newFamily.NumberOfSeats" />
    </div>
    <button type="submit" class="btn btn-primary">Add Family</button>
</EditForm>

@code {
    private List<Family>? families;
    private Family newFamily = new Family();

    protected override async Task OnInitializedAsync()
    {
        families = await Http.GetFromJsonAsync<List<Family>>("api/family");
    }

    private async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync("api/family", newFamily);
        families = await Http.GetFromJsonAsync<List<Family>>("api/family");
        newFamily = new Family();
    }

    public class Family
    {
        public string Id { get; set; } = Guid.NewGuid().ToString();
        public string Name { get; set; } = string.Empty;
        public string Town { get; set; } = string.Empty;
        public int NumberOfPersons { get; set; }
        public List<Child> Children { get; set; } = new List<Child>();
        public int NumberOfSeats { get; set; }
    }

    public class Child
    {
        public string Name { get; set; } = string.Empty;
        public int Age { get; set; }
    }
}
