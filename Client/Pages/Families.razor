@page "/families"

@inject HttpClient Http

@using Shared.Models

<PageTitle>Families</PageTitle>

<h1>Families</h1>

<div class="form-check">
    <input class="form-check-input" type="checkbox" id="ignoreChildren" @bind="ignoreChildren">
    <label class="form-check-label" for="ignoreChildren">
        Ignore families with children
    </label>
</div>

@if (families == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Town</th>
                <th>Number of Persons</th>
                <th>Number of Children</th>
                <th>Number of Seats</th>
                <th>Number of Guests</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var family in families)
            {
                <tr>
                    <td>@family.Name</td>
                    <td>@family.Town</td>
                    <td>@family.NumberOfPersons</td>
                    <td>@family.NumberOfChildren</td>
                    <td>@family.NumberOfSeats</td>
                    <td>@family.Guests.Count</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Family>? families;
    private bool ignoreChildren = false;

    protected override async Task OnInitializedAsync()
    {
        families = await FetchFamilies();
    }

    private async Task<List<Family>> FetchFamilies()
    {
        var query = $"api/getfamily?ignoreChildren={ignoreChildren}";
        return await Http.GetFromJsonAsync<List<Family>>(query);
    }
}
